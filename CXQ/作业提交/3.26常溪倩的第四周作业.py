# 1. 总结文件操作, 读取与写入的的步骤与相关函数及用法
"""
file(变量) = open("file.txt", mode="参数"， encoding="utf-8")
1).需要文件存在，不存在会报错，打开后光标在开头
r:只读模式
r+:可读可写，打开文件，原来内容不会清空
rb:制度二进制文件，和r是相同；图片，声音，视频是二进制数据
rb+:读写二进制文件，和r+是相同的
2).不需要文件存在，不存在会创建，每次打开清空文件
w:只写模式
w+:可写可读
wb:写入二进制文本
wb+:写读二进制文本
3).追加模式
a:追加写模式，打开文本，文本不存在会创建，不会清空文本，会接着文本的末尾写入，只会在末尾写入与光标无关
a+:追加写模式，打开文本，文本不存在会创建，不会清空文本，会接着文本的末尾写入，只会在末尾写入与光标无关
ab:二进制追加写
ab+:二进制追加写读
f:操作句柄，用来操作文件内容，可以查看数据，可以添加数据
read():读取所有文本数据，从光标的位置往后读取到末尾
readable():结果是布尔值，True能读取数据
seek():移动光标
readline():读取一行数据，从光标所在行读取数据，只读取一行数据，光标往后
readlines():从光标开始读取数据，将每一行都拿到放入列表中，包括结尾的换行符
tell():告诉你光标的位置
write():写入数据
writable():判断是否能写，返回布尔值
writlines():将序列内的数据写入文件中，是写入字符串
"""

# 2.设置闰年判断程序.py 对比字符串, 列表, 字典, 元组,集合,写出相似之处以及不同之处总结上述类型相互转换, 取值方法
"""
1).相似之处：
列表：列表是可变对象，它支持在原处修改的操作，也可以通过指定的索引和分片获取元素，区别于元组，可动态增加，删除，更新 字符串具有列表的一些特点
字符串：有和列表，元组一样的索引查看方法，但没有像列表那样的增删改的操作
集合：集合中的元素是不可重复的且不可变对象，列表，字典不可作为其元素
元组：元组和列表在结构上没什么区别，唯一的差异在于元组是只读的，不能修改，元组一旦定义其长度和内容都是固定的。一旦创建元组，则这个元组就不能被修改，即不能对元组进行更新，增加，删除操作。若想创建包含一个元素的元组，则必须在该元素的后面加逗号","否则创建的不是一个元组，而是一个字符串。可以作为字典的键
字典：字典存储键值对数据，字典最外面用大括号，每一组用冒号连起来，然后各组用都好隔开
2).不同之处：
str():可以将列表，字典，集合元组转换成字符串
list():可以将字符串，集合，字典，元组转换成列表
set():可以将字符串，列表，字典，元组转换成集合
dict():可以创建字典，不可把字符串，集合，列表，元组转换成字典
取值：字符串：可以循环，索引取值
    列表：可以循环，索引取值
    集合：可以循环，索引取值
    元组：可以循环，索引取值
    字典：可以循环键取值，按键取值
"""
# 3. 将<<望庐山瀑布>> w模式, 写入文件 libai.txtr模式读取文件, 将换行符去掉, 添加到列表中,题目作为键,列表作为值写入到新的文档中
f = open(file="望庐山瀑布.txt", mode="w+", encoding="utf-8")
f.write("""望庐山瀑布\n
日照香炉生紫烟,遥看瀑布挂前川。\n飞流直下三千尺,疑是银河落九天。""")
f.seek(0)
a = f.read()
b = a.split("\n")
f.close()
f1 = open("libai.txt", mode="w+", encoding="utf-8")
f1.write(f"{b[0]}:{b[1:]}")
f1.close()
# 4. 使用文件操作完成登陆验证, 文件中格式如:账号-密码: 姓名, 性别 登陆后显示:    欢迎张三小哥哥/小姐姐 登陆使用

fa = open("student.txt", "w+", encoding="utf-8")
fa.write("2021123-123456:四郎,男\n2021234-123457:果子狸,男\n2021158-789456:嬛嬛,女\n2021155-956487:拽妃,女")
fa.seek(0)
print("登录验证")
d = fa.readlines()
e = []
g = []
h = []
n = []
for stu in d:
    f = stu.strip().replace(":", "-").replace(",", "-").split("-")
    e.append(f[0])
    g.append(f[1])
    h.append(f[2])
    n.append(f[3])
    print(h)
    print(e.index("2021123"))
zh = input("请输入你的账号：")
while zh not in e:
    print("你输入的账号错误")
    zh = input("请重新输入你的账号：")
ma = input("请输入你的密码：")
while ma != g[e.index(zh)]:
    print("你输入密码错误")
    ma = input("请重新输入你的密码：")
name = input("请输入你的姓名：")
while name != h[e.index(zh)]:
    print("你输入姓名错误")
    name = input("请重新输入你的姓名：")
sex = input("请输入你的性别：")
while sex != n[e.index(zh)]:
    print("你输入性别错误")
    sex = input("请重新输入你的性别：")
else:
    if sex == "女":
        print(f"欢迎{name}小姐姐登录使用")
    elif sex == "男":
        print(f"欢迎{name}哥哥登录使用")
fa.close()